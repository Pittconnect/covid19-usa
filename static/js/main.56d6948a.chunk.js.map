{"version":3,"sources":["components/Layers.js","data/GeoJson.js","components/Map.js","App.js","serviceWorker.js","index.js"],"names":["clusterLayer","id","type","source","filter","paint","clusterCountLayer","layout","unclusteredPointLayer","statesBoundsLayer","statesBordersLayer","GeoData","features","properties","geometry","coordinates","Map","useState","latitude","longitude","zoom","bearing","pitch","viewport","setViewport","isLoaded","setIsLoaded","mapRef","useRef","_sourceRef","hoveredStateId","ref","width","height","mapboxApiAccessToken","process","mapStyle","onViewportChange","onLoad","onHover","event","map","current","getMap","hoveredFeature","find","f","layer","length","setFeatureState","hover","data","usGeoJson","generateId","beforeId","cluster","clusterMaxZoom","clusterRadius","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.56d6948a.chunk.js","sourcesContent":["export const clusterLayer = {\n  id: \"clusters\",\n  type: \"circle\",\n  source: \"covid-19 Patient Location\",\n  filter: [\"has\", \"point_count\"],\n  paint: {\n    \"circle-color\": [\n      \"step\",\n      [\"get\", \"point_count\"],\n      \"#51bbd6\",\n      100,\n      \"#f1f075\",\n      750,\n      \"#f28cb1\",\n    ],\n    \"circle-radius\": [\"step\", [\"get\", \"point_count\"], 20, 100, 30, 750, 40],\n  },\n};\n\nexport const clusterCountLayer = {\n  id: \"cluster-count\",\n  type: \"symbol\",\n  source: \"covid-19 Patient Location\",\n  filter: [\"has\", \"point_count\"],\n  layout: {\n    \"text-field\": \"{point_count_abbreviated}\",\n    \"text-font\": [\"DIN Offc Pro Medium\", \"Arial Unicode MS Bold\"],\n    \"text-size\": 12,\n  },\n};\n\nexport const unclusteredPointLayer = {\n  id: \"unclustered-point\",\n  type: \"circle\",\n  source: \"covid-19 Patient Location\",\n  filter: [\"!\", [\"has\", \"point_count\"]],\n  paint: {\n    \"circle-color\": \"#11b4da\",\n    \"circle-radius\": 4,\n    \"circle-stroke-width\": 1,\n    \"circle-stroke-color\": \"#fff\",\n  },\n};\n\nexport const statesBoundsLayer = {\n  id: \"state-fills\",\n  type: \"fill\",\n  source: \"states\",\n  layout: {},\n  filter: [\"==\", \"$type\", \"Polygon\"],\n  paint: {\n    \"fill-color\": [\n      \"interpolate\",\n      [\"linear\"],\n      [\"get\", \"CENSUSAREA\"],\n      0,\n      \"#FFF4EF\",\n      100,\n      \"#FEDACA\",\n      1000,\n      \"#FCB49A\",\n      5000,\n      \"#FC896C\",\n      10000,\n      \"#F75E44\",\n      50000,\n      \"#E13129\",\n      100000,\n      \"#BB171C\",\n      500000,\n      \"#8B4225\",\n      1000000,\n      \"#723122\",\n    ],\n    \"fill-opacity\": [\n      \"case\",\n      [\"boolean\", [\"feature-state\", \"hover\"], false],\n      1,\n      0.8,\n    ],\n  },\n};\n\nexport const statesBordersLayer = {\n  id: \"state-borders\",\n  type: \"line\",\n  source: \"states\",\n  layout: {},\n  paint: {\n    \"line-color\": [\n      \"case\",\n      [\"boolean\", [\"feature-state\", \"hover\"], false],\n      \"#FF093C\",\n      [\n        \"interpolate\",\n        [\"linear\"],\n        [\"get\", \"CENSUSAREA\"],\n        0,\n        \"#FFF4EF\",\n        100,\n        \"#FEDACA\",\n        1000,\n        \"#FCB49A\",\n        5000,\n        \"#FC896C\",\n        10000,\n        \"#F75E44\",\n        50000,\n        \"#E13129\",\n        100000,\n        \"#BB171C\",\n        500000,\n        \"#8B4225\",\n        1000000,\n        \"#723122\",\n      ],\n    ],\n    \"line-opacity\": [\n      \"case\",\n      [\"boolean\", [\"feature-state\", \"hover\"], false],\n      1,\n      0.5,\n    ],\n    \"line-width\": 2,\n  },\n};\n","export const GeoData = {\n  type: \"FeatureCollection\",\n  features: [\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-120.05859375, 45.644768217751924]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-117.0703125, 46.01222384063236]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-110.12695312499999, 45.767522962149876]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-101.6015625, 44.96479793033101]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-92.63671875, 40.97989806962013]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-90.615234375, 37.3002752813443]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-116.89453125, 40.245991504199026]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-108.28125, 34.74161249883172]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-92.373046875, 33.063924198120645]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-83.583984375, 39.36827914916014]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-102.3046875, 38.13455657705411]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-100.986328125, 32.175612478499325]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-82.880859375, 34.66935854524543]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-98.61328125, 42.94033923363181]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-107.490234375, 43.32517767999296]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-92.43896484375, 40.66397287638688]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-93.88916015625, 40.329795743702064]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-97.0751953125, 40.43022363450862]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-92.04345703125, 39.926588421909436]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-108.017578125, 42.032974332441405]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-88.59374999999999, 42.8115217450979]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-85.78125, 39.095962936305476]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-114.521484375, 36.03133177633187]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-111.796875, 40.91351257612758]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-105.46875, 47.81315451752768]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-94.130859375, 45.706179285330855]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-120.84960937499999, 38.41055825094609]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-120.76171875, 42.94033923363181]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-114.08203125, 44.902577996288876]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-100.986328125, 32.24997445586331]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-98.45947265625, 35.44277092585766]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-96.43798828125, 37.020098201368114]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-92.52685546875, 36.98500309285596]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-75.4541015625, 41.65649719441145]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-76.57470703125, 41.261291493919884]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-76.70654296875, 40.84706035607122]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-76.2890625, 40.463666324587685]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-74.37744140625, 41.29431726315258]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-74.68505859374999, 40.697299008636755]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-78.20068359374999, 40.3130432088809]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-77.47558593749999, 39.52099229357195]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-78.06884765624999, 41.83682786072714]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-74.11376953125, 42.76314586689492]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-75.41015624999999, 42.68243539838623]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-85.8251953125, 36.61552763134925]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-75.03662109375, 39.470125122358176]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-73.93798828125, 40.713955826286046]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-72.7734375, 43.5326204268101]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-81.5185546875, 43.068887774169625]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-74.1357421875, 40.56389453066509]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-74.1357421875, 40.56389453066509]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-74.1357421875, 40.56389453066509]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-74.1357421875, 40.56389453066509]\n      }\n    },\n    {\n      type: \"Feature\",\n      properties: {},\n      geometry: {\n        type: \"Point\",\n        coordinates: [-74.1357421875, 40.56389453066509]\n      }\n    }\n  ]\n};\n","import React, { useRef, useState /* , useEffect */ } from \"react\";\nimport ReactMapGL, { Source, Layer } from \"react-map-gl\";\n// import SheetJSApp from \"./sheetjs\";\nimport {\n  clusterLayer,\n  clusterCountLayer,\n  unclusteredPointLayer,\n  statesBoundsLayer,\n  statesBordersLayer,\n} from \"./Layers\";\n\nimport { GeoData, usGeoJson } from \"../data\";\n\nconst TOKEN = process.env.REACT_APP_MAPBOX_ACCESS;\n\nconst Map = () => {\n  const [viewport, setViewport] = useState({\n    latitude: 40.67,\n    longitude: -103.59,\n    zoom: 3,\n    bearing: 0,\n    pitch: 0,\n  });\n  const [isLoaded, setIsLoaded] = useState(false);\n  // const [isLoadedData, setIsLoadedData] = useState(false);\n  // const [items, setItems] = useState([]);\n\n  const mapRef = useRef();\n  const _sourceRef = useRef();\n  const hoveredStateId = useRef(null);\n\n  const _onLoad = () => setIsLoaded(true);\n\n  const _onViewportChange = (viewport) => setViewport(viewport);\n\n  const _onMouseMove = (event) => {\n    if (isLoaded) {\n      const map = mapRef.current.getMap();\n      const { features } = event;\n\n      const hoveredFeature =\n        features && features.find((f) => f.layer.id === \"state-fills\");\n\n      if (hoveredFeature) {\n        if (features.length > 0) {\n          if (hoveredStateId.current) {\n            map.setFeatureState(\n              { source: \"states\", id: hoveredStateId.current },\n              { hover: false }\n            );\n          }\n          hoveredStateId.current = hoveredFeature.id;\n          map.setFeatureState(\n            { source: \"states\", id: hoveredStateId.current },\n            { hover: true }\n          );\n        }\n      } else {\n        map.setFeatureState(\n          { source: \"states\", id: hoveredStateId.current },\n          { hover: false }\n        );\n        hoveredStateId.current = null;\n      }\n    }\n  };\n\n  // const fetchDataAPI = () => {\n  //   setIsLoadedData(true);\n  //   fetch(\"https://covid19-data.p.rapidapi.com/geojson-us\", {\n  //     method: \"GET\",\n  //     headers: {\n  //       \"x-rapidapi-host\": \"covid19-data.p.rapidapi.com\",\n  //       \"x-rapidapi-key\": \"5876e1d086mshe6d5c492e4770d2p1663cajsn8ca9a31f7677\",\n  //     },\n  //   })\n  //     .then((res) => res.json())\n  //     .then(\n  //       (result) => {\n  //         setItems(result);\n  //         setIsLoadedData(false);\n  //       },\n\n  //       (error) => {\n  //         setIsLoadedData(false);\n  //         console.log(\"error: \", error);\n  //       }\n  //     );\n  // };\n\n  // useEffect(() => {\n  //   console.log(\"items: \", items);\n  //   // console.log(\"isLoadedData: \", isLoadedData);\n  // }, [items]);\n\n  return (\n    <div>\n      {/* <button onClick={fetchDataAPI}>fetch data</button> */}\n      {/* {isLoadedData && <div>loading</div>} */}\n      <ReactMapGL\n        {...viewport}\n        ref={mapRef}\n        width=\"100vw\"\n        height=\"100vh\"\n        mapboxApiAccessToken={TOKEN}\n        // mapStyle=\"mapbox://styles/alexnorvag/ck9efq0oz2d0x1ioftrtazzyz\"\n        mapStyle=\"mapbox://styles/alexnorvag/ck9efq0oz2d0x1ioftrtazzyz/draft\"\n        // mapStyle=\"mapbox://styles/alexnorvag/ck98f0bv407ho1iodg8raxrm4\"\n        // mapStyle=\"mapbox://styles/alexnorvag/ck98f0bv407ho1iodg8raxrm4/draft\"\n        onViewportChange={_onViewportChange}\n        onLoad={_onLoad}\n        onHover={_onMouseMove}\n      >\n        <Source\n          id=\"states\"\n          type=\"geojson\"\n          data={usGeoJson}\n          ref={_sourceRef}\n          generateId={true}\n        >\n          <Layer {...statesBoundsLayer} beforeId={\"waterway-label\"} />\n          <Layer {...statesBordersLayer} beforeId={\"waterway-label\"} />\n        </Source>\n        <Source\n          type=\"geojson\"\n          data={GeoData}\n          // generateId={true}\n          // promoteId={true}\n          cluster={true}\n          clusterMaxZoom={14}\n          clusterRadius={50}\n          ref={_sourceRef}\n        >\n          <Layer {...clusterLayer} />\n          <Layer {...clusterCountLayer} />\n          <Layer {...unclusteredPointLayer} />\n        </Source>\n      </ReactMapGL>\n    </div>\n  );\n};\n\nexport default Map;\n","import React from \"react\";\nimport Map from \"./components/Map\";\n// import Charts from \"./components/charts/Charts\";\n\nimport \"./app.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"App-container\">\n        <div className=\"covid-map\">\n          <Map />\n        </div>\n\n        <div className=\"map-charts\">{/* <Charts /> */}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}