{"version":3,"sources":["components/Layers.js","components/spiner/Spiner.js","components/charts/GroupedBar/Text.js","components/legends/RectLegend.js","helpers/constants.js","components/charts/ConcentricChart.js","components/charts/GroupedBar/Rect.js","components/legends/BarRectLegend.js","components/charts/GroupedBar/GroupedBar.js","components/popup/County.js","hooks/useFetch.js","components/Map.js","App.js","serviceWorker.js","index.js"],"names":["countiesBoundLayer","id","type","source","minzoom","layout","filter","paint","countiesBorderLayer","statesBoundLayer","maxzoom","statesBorderLayer","Spiner","className","Text","translateX","translateY","textAnchor","dominantBaseline","fill","fontSize","text","transform","getCoord","containerWidth","elementWidth","index","columnsCount","Math","trunc","getX","wDiff","getY","containerHeight","elementHeight","paddingTop","paddingBottom","paddingVertical","hDiff","RectLegend","elementLabel","elementFontSize","elementIndex","colorScale","useState","x","setX","y","setY","useEffect","width","height","usaStatesAbbr","label","value","ZOOM","BOUNDS","CONCENTRIC_COLORS","GROUPED_BAR_COLORS","d3","window","Circle","data","sqrtScale","top","left","r","cx","cy","name","ConcentricChart","props","legendWidth","legendHeight","legendTop","legendRight","legendBottom","legendLeft","useLegend","legendOnRight","totalTest","totalTestResults","hospitalized","hospitalizedCurrently","_height","scaleSqrt","domain","maxTotalTests","range","bottom","scaleOrdinal","itemWidth","stateName","dataKeys","map","_k","_n","key","Object","keys","right","paddingRight","paddingLeft","values","Rect","showPercentage","fontColor","GroupedBar","showLegend","legendData","contentWidth","contentHeight","chartHeight","d","i","scaleLinear","max","scaleBand","padding","legColorScale","legX","paddingInner","format","_translateX","chartFontSize","Fragment","bandwidth","County","chartHeaders","chartData","header","length","style","fetchReducer","state","action","isLoading","error","payload","Error","Map","latitude","longitude","zoom","bearing","pitch","viewport","setViewport","isMapLoaded","setIsMapLoaded","popupCoords","setPopupCoords","initialUrl","initialOptions","url","setUrl","options","setOptions","useReducer","dispatch","a","fetch","response","status","json","fetchDataAPI","useFetch","trackers","isTrackersLoading","setIsLoading","setMaxTotalTests","maxRsei","setMaxRsei","setChartData","countyChartData","setCountyChartData","rseiData","setRseiData","usGeoJsonCounties","setUsGeoJsonCounties","isCountiesLoading","setIsCountiesLoading","usGeoJsonStates","setUsGeoJsonStates","isStatesLoading","setIsStatesLoading","usRSEIScoreCounties","setUsRSEIScoreCounties","isRSEIScoreLoading","setIsRSEIScoreLoading","mapRef","useRef","_sourceRef","hoveredStateId","hoveredStateSource","getStateInfo","feature","properties","NAME","stateAbbr","find","tracker","positive","hospitalizedCumulative","death","getCountyInfo","GEO_ID","STATE","indStartPos","includes","indexOf","countyFIPS","substring","RSEIScore","headers","slice","sort","b","descending","nest","FIPS","object","then","counties","default","states","rsei","ref","mapboxApiAccessToken","process","mapStyle","onViewStateChange","viewState","vp","WebMercatorViewport","wn","unproject","es","leftBoundPx","project","centerX","topBoundPx","centerY","rightBoundPx","diff","bottomBoundPx","onLoad","onHover","event","current","getMap","mapZoom","getZoom","hoveredLayer","features","lngLat","hoveredFeature","f","layer","setFeatureState","hover","minZoom","maxZoom","entries","closeButton","anchor","generateId","beforeId","showCompass","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.6dfc44c3.chunk.js","sourcesContent":["export const countiesBoundLayer = {\n  id: \"county-bound\",\n  type: \"fill\",\n  source: \"counties\",\n  minzoom: 5,\n  layout: {},\n  filter: [\"==\", \"$type\", \"Polygon\"],\n  paint: {\n    \"fill-color\": \"#FFFFFF\",\n    \"fill-opacity\": [\n      \"case\",\n      [\"boolean\", [\"feature-state\", \"hover\"], false],\n      0.6,\n      0.2,\n      // 0,\n      // 0,\n    ],\n  },\n};\n\nexport const countiesBorderLayer = {\n  id: \"county-border\",\n  type: \"line\",\n  source: \"counties\",\n  minzoom: 5,\n  layout: {},\n  paint: {\n    \"line-color\": \"#FFFFFF\",\n    // \"line-color\": [\n    //   \"case\",\n    //   [\"boolean\", [\"feature-state\", \"hover\"], false],\n    //   \"#FF093C\",\n    //   [\n    //     \"interpolate\",\n    //     [\"linear\"],\n    //     [\"get\", \"CENSUSAREA\"],\n    //     0,\n    //     \"#FFF4EF\",\n    //     100,\n    //     \"#FEDACA\",\n    //     1000,\n    //     \"#FCB49A\",\n    //     5000,\n    //     \"#FC896C\",\n    //     10000,\n    //     \"#F75E44\",\n    //     50000,\n    //     \"#E13129\",\n    //     100000,\n    //     \"#BB171C\",\n    //     500000,\n    //     \"#8B4225\",\n    //     1000000,\n    //     \"#723122\",\n    //   ],\n    // ],\n    \"line-opacity\": [\n      \"case\",\n      [\"boolean\", [\"feature-state\", \"hover\"], false],\n      1,\n      0.5,\n    ],\n    \"line-width\": 1.4,\n  },\n};\n\nexport const statesBoundLayer = {\n  id: \"state-bound\",\n  source: \"states\",\n  maxzoom: 5,\n  type: \"fill\",\n  layout: {},\n  // filter: [\"==\", \"$type\", \"Polygon\"],\n  paint: {\n    \"fill-color\": \"#30cbef\",\n    // \"fill-opacity\": 0.3,\n    \"fill-opacity\": [\n      \"case\",\n      [\"boolean\", [\"feature-state\", \"hover\"], false],\n      0.6,\n      0.2,\n    ],\n  },\n};\n\nexport const statesBorderLayer = {\n  id: \"state-borders\",\n  type: \"line\",\n  source: \"states\",\n  layout: {},\n  paint: {\n    \"line-color\": \"#0fa2c4\",\n    \"line-opacity\": [\n      \"case\",\n      [\"boolean\", [\"feature-state\", \"hover\"], false],\n      1,\n      0.5,\n    ],\n    \"line-width\": [\"interpolate\", [\"linear\"], [\"zoom\"], 5, 2, 6, 6],\n  },\n};\n","import React from \"react\";\n\nimport './spiner.scss'\n\nconst Spiner = () => {\n  return (\n    <div className=\"cssload-container\">\n      <div className=\"cssload-circle-1\">\n        <div className=\"cssload-circle-2\">\n          <div className=\"cssload-circle-3\">\n            <div className=\"cssload-circle-4\">\n              <div className=\"cssload-circle-5\">\n                <div className=\"cssload-circle-6\">\n                  <div className=\"cssload-circle-7\">\n                    <div className=\"cssload-circle-8\"></div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Spiner;\n","import React from \"react\";\n\nconst Text = ({\n  translateX,\n  translateY,\n  textAnchor,\n  dominantBaseline,\n  fill,\n  fontSize,\n  text,\n}) => {\n  return (\n    <text\n      transform={`translate(${translateX}, ${translateY})`}\n      textAnchor={textAnchor}\n      dominantBaseline={dominantBaseline}\n      fill={fill}\n      fontSize={fontSize}\n    >\n      {text}\n    </text>\n  );\n};\n\nexport default Text;\n","import React, { useState, useEffect } from \"react\";\nimport Text from \"../charts/GroupedBar/Text\";\n\nconst getCoord = (containerWidth, elementWidth, index) => {\n  const columnsCount = Math.trunc(containerWidth / elementWidth);\n\n  const getX = () => {\n    const column = index % columnsCount;\n    const elWidth = containerWidth / columnsCount;\n    const wDiff = elWidth - elementWidth;\n    const offset = wDiff / 2;\n\n    const x = (elementWidth + wDiff) * column + offset;\n\n    return x;\n  };\n\n  const getY = (containerHeight, elementHeight, paddingTop, paddingBottom) => {\n    const paddingVertical = paddingTop + paddingBottom;\n    const rowsCount = Math.trunc(\n      containerHeight / (elementHeight + paddingVertical)\n    );\n    const row = Math.trunc(index / columnsCount);\n    const elHeight = containerHeight / rowsCount;\n    const hDiff = elHeight - elementHeight;\n    const offset = hDiff / 2;\n\n    const y = (elementHeight + hDiff) * row + offset;\n\n    return y;\n  };\n\n  return { getX, getY };\n};\n\nconst RectLegend = ({\n  containerWidth,\n  containerHeight,\n  elementWidth,\n  elementHeight,\n  paddingTop,\n  paddingBottom,\n  elementLabel,\n  elementFontSize,\n  elementIndex,\n  colorScale,\n}) => {\n  const [x, setX] = useState(0);\n  const [y, setY] = useState(0);\n\n  useEffect(() => {\n    setX(getCoord(containerWidth, elementWidth, elementIndex).getX());\n    setY(\n      getCoord(containerWidth, elementWidth, elementIndex).getY(\n        containerHeight,\n        elementHeight,\n        paddingTop,\n        paddingBottom\n      )\n    );\n  }, [\n    containerWidth,\n    containerHeight,\n    elementWidth,\n    elementHeight,\n    elementIndex,\n    paddingTop,\n    paddingBottom,\n  ]);\n\n  return (\n    <>\n      <rect\n        width={elementWidth}\n        height={elementHeight}\n        fill={colorScale(elementLabel)}\n        x={x}\n        y={y}\n      />\n      <Text\n        translateX={x + 2}\n        translateY={y + elementFontSize + 2}\n        textAnchor={\"start\"}\n        dominantBaseline={\"baseline\"}\n        fill={\"#fff\"}\n        fontSize={elementFontSize}\n        text={elementLabel}\n      />\n    </>\n  );\n};\n\nexport default RectLegend;\n","export const usaStatesAbbr = [\n  { label: \"Alabama\", value: \"AL\", id: \"01\" },\n  { label: \"Alaska\", value: \"AK\", id: \"02\" },\n  { label: \"American Samoa\", value: \"AS\", id: \"60\" },\n  { label: \"Arizona\", value: \"AZ\", id: \"04\" },\n  { label: \"Arkansas\", value: \"AR\", id: \"05\" },\n  { label: \"California\", value: \"CA\", id: \"06\" },\n  { label: \"Colorado\", value: \"CO\", id: \"08\" },\n  { label: \"Connecticut\", value: \"CT\", id: \"09\" },\n  { label: \"Delaware\", value: \"DE\", id: \"10\" },\n  { label: \"District of Columbia\", value: \"DC\", id: \"11\" },\n  { label: \"States of Micronesia\", value: \"FM\", id: \"64\" },\n  { label: \"Florida\", value: \"FL\", id: \"12\" },\n  { label: \"Georgia\", value: \"GA\", id: \"13\" },\n  { label: \"Guam\", value: \"GU\", id: \"66\" },\n  { label: \"Hawaii\", value: \"HI\", id: \"15\" },\n  { label: \"Idaho\", value: \"ID\", id: \"16\" },\n  { label: \"Illinois\", value: \"IL\", id: \"17\" },\n  { label: \"Indiana\", value: \"IN\", id: \"18\" },\n  { label: \"Iowa\", value: \"IA\", id: \"19\" },\n  { label: \"Kansas\", value: \"KS\", id: \"20\" },\n  { label: \"Kentucky\", value: \"KY\", id: \"21\" },\n  { label: \"Louisiana\", value: \"LA\", id: \"22\" },\n  { label: \"Maine\", value: \"ME\", id: \"23\" },\n  { label: \"Marshall Islands\", value: \"MH\", id: \"68\" },\n  { label: \"Maryland\", value: \"MD\", id: \"24\" },\n  { label: \"Massachusetts\", value: \"MA\", id: \"25\" },\n  { label: \"Michigan\", value: \"MI\", id: \"26\" },\n  { label: \"Minnesota\", value: \"MN\", id: \"27\" },\n  { label: \"Mississippi\", value: \"MS\", id: \"28\" },\n  { label: \"Missouri\", value: \"MO\", id: \"29\" },\n  { label: \"Montana\", value: \"MT\", id: \"30\" },\n  { label: \"Nebraska\", value: \"NE\", id: \"31\" },\n  { label: \"Nevada\", value: \"NV\", id: \"32\" },\n  { label: \"New Hampshire\", value: \"NH\", id: \"33\" },\n  { label: \"New Jersey\", value: \"NJ\", id: \"34\" },\n  { label: \"New Mexico\", value: \"NM\", id: \"35\" },\n  { label: \"New York\", value: \"NY\", id: \"36\" },\n  { label: \"North Carolina\", value: \"NC\", id: \"37\" },\n  { label: \"North Dakota\", value: \"ND\", id: \"38\" },\n  { label: \"Northern Mariana Islands\", value: \"MP\", id: \"69\" },\n  { label: \"Ohio\", value: \"OH\", id: \"39\" },\n  { label: \"Oklahoma\", value: \"OK\", id: \"40\" },\n  { label: \"Oregon\", value: \"OR\", id: \"41\" },\n  { label: \"Palau\", value: \"PW\", id: \"70\" },\n  { label: \"Pennsylvania\", value: \"PA\", id: \"42\" },\n  { label: \"Puerto Rico\", value: \"PR\", id: \"72\" },\n  { label: \"Rhode Island\", value: \"RI\", id: \"44\" },\n  { label: \"South Carolina\", value: \"SC\", id: \"45\" },\n  { label: \"South Dakota\", value: \"SD\", id: \"46\" },\n  { label: \"Tennessee\", value: \"TN\", id: \"47\" },\n  { label: \"Texas\", value: \"TX\", id: \"48\" },\n  { label: \"Utah\", value: \"UT\", id: \"49\" },\n  { label: \"Vermont\", value: \"VT\", id: \"50\" },\n  { label: \"Virgin Islands\", value: \"VI\", id: \"78\" },\n  { label: \"Virginia\", value: \"VA\", id: \"51\" },\n  { label: \"Washington\", value: \"WA\", id: \"53\" },\n  { label: \"West Virginia\", value: \"WV\", id: \"54\" },\n  { label: \"Wisconsin\", value: \"WI\", id: \"55\" },\n  { label: \"Wyoming\", value: \"WY\", id: \"56\" },\n];\n\nexport const COVIDTRACKER_API_LINK =\n  \"https://covidtracking.com/api/v1/states/current.json\";\n\nexport const ZOOM = {\n  MIN: 4,\n  MAX: 22,\n  COUNTIES: 5,\n};\n\nexport const BOUNDS = [\n  [-179.99, 16.01619],\n  [-64.46466, 71.757764],\n];\n\nexport const CONCENTRIC_COLORS = [\n  \"rgba(129, 197, 64, 1)\",\n  \"rgba(245, 181, 46, 1)\",\n  \"rgba(237, 91, 53, 1)\",\n  \"rgba(0,0,0, 1)\",\n];\n\nexport const GROUPED_BAR_COLORS = [\"rgb(97, 46, 141)\", \"rgb(245, 181, 46)\"];\n","import React from \"react\";\nimport RectLegend from \"../legends/RectLegend\";\nimport { CONCENTRIC_COLORS } from \"../../helpers\";\n\nconst d3 = window.d3;\n\nconst Circle = ({\n  data,\n  sqrtScale,\n  colorScale,\n  width,\n  top,\n  left,\n}) => {\n  return (\n    <circle\n      r={sqrtScale(data.value)}\n      cx={width / 2 - left}\n      cy={top}\n      fill={colorScale(data.name)}\n    />\n  );\n};\n\nconst ConcentricChart = (props) => {\n  const {\n    legendWidth,\n    legendHeight,\n    legendTop,\n    legendRight,\n    legendBottom,\n    legendLeft,\n    useLegend,\n    legendOnRight = true,\n  } = props;\n\n  const totalTest = props.data.totalTestResults;\n  const hospitalized = props.data.hospitalizedCurrently;\n\n  const _height = legendOnRight ? props.height : props.height - legendHeight;\n\n  const sqrtScale = d3\n    .scaleSqrt()\n    .domain([\n      0,\n      props.maxTotalTests.totalTestResults +\n        props.maxTotalTests.hospitalizedCurrently,\n    ])\n    .range([0, (_height - props.top - props.bottom) / 2]);\n\n  const colorScale = d3\n    .scaleOrdinal()\n    .domain(props.data)\n    .range(CONCENTRIC_COLORS);\n\n  const itemWidth = legendOnRight ? 170 : 180;\n  const itemHeight = 26;\n  const itemFontSize = 17;\n\n  return (\n    <>\n      <h1 className=\"chart-header\">{`State: ${props.data.stateName}`}</h1>\n      <svg width={props.width} height={props.height}>\n        <g transform={`translate(${0}, ${0})`}>\n          {props.dataKeys.map((_k, _n) => (\n            <Circle\n              key={_n}\n              data={{\n                name: Object.keys(_k)[0],\n                value: props.data[Object.keys(_k)[0]],\n              }}\n              width={legendOnRight ? props.width - legendWidth : props.width}\n              height={\n                legendOnRight ? props.height : props.height - legendHeight\n              }\n              top={\n                legendOnRight\n                  ? legendHeight / 2 + props.top <\n                    sqrtScale(totalTest) + props.top\n                    ? sqrtScale(totalTest) + props.top\n                    : legendHeight / 2 + props.top\n                  : sqrtScale(totalTest) + legendHeight\n              }\n              right={props.right}\n              bottom={props.bottom}\n              left={\n                _k.hospitalizedCurrently\n                  ? sqrtScale(totalTest) -\n                    sqrtScale(hospitalized) +\n                    sqrtScale(props.data[Object.keys(_k)[0]])\n                  : sqrtScale(totalTest) -\n                    sqrtScale(hospitalized) -\n                    sqrtScale(props.data[Object.keys(_k)[0]])\n              }\n              sqrtScale={sqrtScale}\n              colorScale={colorScale}\n            />\n          ))}\n        </g>\n        {useLegend && (\n          <g\n            transform={`translate(${\n              legendOnRight\n                ? `${props.width - itemWidth - legendLeft - legendRight}, ${\n                    legendHeight / 2 + props.top <\n                    sqrtScale(totalTest) + props.top\n                      ? sqrtScale(totalTest) - legendHeight / 2 + props.top\n                      : props.top\n                  }`\n                : `${0}, ${0}`\n            })`}\n          >\n            {props.dataKeys.map((_k, _n) => (\n              <RectLegend\n                key={_n}\n                containerWidth={legendWidth}\n                containerHeight={legendHeight}\n                elementWidth={itemWidth}\n                elementHeight={itemHeight}\n                paddingTop={legendTop}\n                paddingRight={legendRight}\n                paddingBottom={legendBottom}\n                paddingLeft={legendLeft}\n                elementLabel={`${Object.values(_k)[0]}: ${\n                  props.data[Object.keys(_k)[0]] || 0\n                }`}\n                elementFontSize={itemFontSize}\n                elementIndex={_n}\n                colorScale={colorScale}\n              />\n            ))}\n          </g>\n        )}\n      </svg>\n    </>\n  );\n};\n\nexport default ConcentricChart;\n","import React from \"react\";\n\nconst Rect = ({ x, y, width, height, fill, showPercentage }) => {\n  return <rect x={x} y={y} width={width} height={height} fill={fill} />;\n};\n\nexport default Rect;\n","import React from \"react\";\nimport Rect from \"../charts/GroupedBar/Rect\";\nimport Text from \"../charts/GroupedBar/Text\";\n\nconst RectLegend = ({\n  data,\n  x,\n  y,\n  width,\n  height,\n  fill,\n  fontSize,\n  fontColor,\n  textAnchor,\n  dominantBaseline,\n}) => {\n  return (\n    <>\n      <Rect x={x} y={y} width={width} height={height} fill={fill} />\n      <Text\n        translateX={x + 2}\n        translateY={y + fontSize}\n        textAnchor={textAnchor}\n        dominantBaseline={dominantBaseline}\n        fill={fontColor}\n        fontSize={fontSize}\n        text={`${data.key}: ${data.value}`}\n      />\n    </>\n  );\n};\n\nexport default RectLegend;\n","import React from \"react\";\nimport Rect from \"./Rect\";\nimport Text from \"./Text\";\nimport RectLegend from \"../../legends/BarRectLegend\";\nimport { GROUPED_BAR_COLORS } from \"../../../helpers\";\n\nconst d3 = window.d3;\n\nconst GroupedBar = ({\n  width,\n  height,\n  top,\n  right,\n  bottom,\n  left,\n  data,\n  showLegend,\n  legendData,\n  showPercentage = true,\n}) => {\n  const contentWidth = width - left - right;\n  const contentHeight = height - top - bottom;\n  const legendHeight = contentHeight / 3;\n  const chartHeight = contentHeight - legendHeight;\n\n  const colorScale = d3\n    .scaleOrdinal()\n    .domain(data.map((d, i) => i))\n    .range(GROUPED_BAR_COLORS);\n\n  const x = d3\n    .scaleLinear()\n    .domain([0, d3.max(data)])\n    .range([0, contentWidth]);\n  const y = d3\n    .scaleBand()\n    .range([0, chartHeight])\n    .domain(data.map((d, i) => i))\n    .padding(0.1);\n\n  const legColorScale = d3\n    .scaleOrdinal()\n    .domain(legendData)\n    .range(GROUPED_BAR_COLORS);\n\n  const legX = d3\n    .scaleBand()\n    .range([0, contentWidth])\n    .domain(legendData)\n    .paddingInner(0.1);\n\n  const format = d3.format(\".2f\");\n  const chartFontSize = 12;\n\n  const _translateX = (x) => {\n    const leftPos = chartFontSize * 3 + 2;\n    return x < leftPos ? leftPos : x;\n  };\n\n  return (\n    <svg width={width} height={height}>\n      <g transform={`translate(${left}, ${top})`}>\n        {data.map((d, i) => (\n          <React.Fragment key={i}>\n            <Rect\n              key={i}\n              x={x(0)}\n              y={y(i)}\n              width={x(d)}\n              height={y.bandwidth()}\n              fill={colorScale(i)}\n            />\n            {showPercentage && (\n              <Text\n                translateX={_translateX(x(d) - 2)}\n                translateY={y(i) + y.bandwidth() / 2}\n                textAnchor={\"end\"}\n                dominantBaseline=\"middle\"\n                fill={\"#fff\"}\n                fontSize={chartFontSize}\n                text={`${format((d * 100) / d3.max(data))}%`}\n              />\n            )}\n          </React.Fragment>\n        ))}\n        {showLegend &&\n          legendData.map((d, i) => (\n            <RectLegend\n              key={i}\n              data={{ key: d, value: data[i] }}\n              x={legX(d)}\n              y={chartHeight + bottom}\n              width={legX.bandwidth()}\n              height={legendHeight - bottom}\n              fill={legColorScale(d)}\n              fontSize={15}\n              fontColor={\"#fff\"}\n              textAnchor={\"start\"}\n              dominantBaseline=\"middle\"\n            />\n          ))}\n      </g>\n    </svg>\n  );\n};\n\nexport default GroupedBar;\n","import React from \"react\";\nimport GroupedBar from \"../charts/GroupedBar/GroupedBar\";\n\nconst County = ({\n  chartHeaders = [{ key: \"null\", value: \"null\" }],\n  chartData,\n}) => {\n  const svgWidth = 360;\n  const svgHeight = 140;\n\n  return (\n    <>\n      {chartHeaders.map((header, key) => (\n        <h1\n          className=\"chart-header\"\n          key={key}\n        >{`${header.key}: ${header.value}`}</h1>\n      ))}\n      {chartData.length !== 0 ? (\n        <GroupedBar\n          width={svgWidth}\n          height={svgHeight}\n          data={chartData}\n          top={10}\n          right={10}\n          bottom={10}\n          left={10}\n          showLegend={true}\n          legendData={[\"Max RSEI\", \"County RSEI\"]}\n        />\n      ) : (\n        <h1 className=\"chart-header\" style={{ paddingTop: \"10px\" }}>\n          RSEI Score: NO DATA\n        </h1>\n      )}\n    </>\n  );\n};\n\nexport default County;\n","import { useReducer, useState, useEffect } from \"react\";\n\nconst fetchReducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_INIT\":\n      return {\n        ...state,\n        isLoading: true,\n        error: null,\n      };\n    case \"FETCH_SUCCESS\":\n      return {\n        ...state,\n        isLoading: false,\n        error: null,\n        data: action.payload,\n      };\n    case \"FETCH_ERROR\":\n      return {\n        ...state,\n        isLoading: false,\n        error: action.error,\n      };\n    default:\n      throw new Error(\"Not suppored action\");\n  }\n};\n\nexport default function useFetch(initialUrl, initialOptions = {}) {\n  const [url, setUrl] = useState(initialUrl);\n  const [options, setOptions] = useState(initialOptions)\n\n  const [state, dispatch] = useReducer(fetchReducer, {\n    data: null,\n    isLoading: false,\n    error: null,\n  });\n\n  useEffect(() => {\n    const fetchDataAPI = async () => {\n      dispatch({ type: \"FETCH_INIT\" });\n\n      try {\n        const response = await fetch(url, options);\n        if (response.status < 200 || response.status >= 300) {\n          throw new Error(\"Error fetching data\");\n        }\n        const payload = await response.json();\n\n        dispatch({ type: \"FETCH_SUCCESS\", payload });\n      } catch (error) {\n        dispatch({ type: \"FETCH_ERROR\", error });\n      }\n    };\n\n    fetchDataAPI();\n  }, [url, options]);\n\n  return [state, setUrl, setOptions];\n}\n","import React, { useRef, useState, useEffect } from \"react\";\nimport ReactMapGL, {\n  Source,\n  Layer,\n  Popup,\n  NavigationControl,\n  WebMercatorViewport,\n} from \"react-map-gl\";\nimport {\n  statesBoundLayer,\n  statesBorderLayer,\n  countiesBoundLayer,\n  countiesBorderLayer,\n} from \"./Layers\";\nimport Spiner from \"./spiner/Spiner\";\nimport ConcentricChart from \"./charts/ConcentricChart\";\nimport CountyPopup from \"./popup/County\";\n\nimport { usaStatesAbbr, COVIDTRACKER_API_LINK, ZOOM, BOUNDS } from \"../helpers\";\nimport { useFetch } from \"../hooks\";\n\nconst d3 = window.d3;\n\nconst TOKEN = process.env.REACT_APP_MAPBOX_ACCESS;\n\nconst Map = () => {\n  const [viewport, setViewport] = useState({\n    latitude: 40.54097864298709,\n    longitude: -99.81367290280828,\n    zoom: ZOOM.MIN,\n    bearing: 0,\n    pitch: 0,\n  });\n  const [isMapLoaded, setIsMapLoaded] = useState(false);\n  const [popupCoords, setPopupCoords] = useState({});\n  const [{ data: trackers, isLoading: isTrackersLoading, error }] = useFetch(\n    COVIDTRACKER_API_LINK\n  );\n  const [isLoading, setIsLoading] = useState(false);\n  const [maxTotalTests, setMaxTotalTests] = useState(0);\n  const [maxRsei, setMaxRsei] = useState(0);\n  const [chartData, setChartData] = useState({});\n  const [countyChartData, setCountyChartData] = useState({});\n  const [rseiData, setRseiData] = useState([]);\n  const [usGeoJsonCounties, setUsGeoJsonCounties] = useState([]);\n  const [isCountiesLoading, setIsCountiesLoading] = useState(false);\n  const [usGeoJsonStates, setUsGeoJsonStates] = useState([]);\n  const [isStatesLoading, setIsStatesLoading] = useState(false);\n  const [usRSEIScoreCounties, setUsRSEIScoreCounties] = useState([]);\n  const [isRSEIScoreLoading, setIsRSEIScoreLoading] = useState(false);\n\n  const mapRef = useRef();\n  const _sourceRef = useRef();\n  const hoveredStateId = useRef(null);\n  const hoveredStateSource = useRef(null);\n  const legendOnRight = useRef(true);\n\n  const _onLoad = () => setIsMapLoaded(true);\n\n  const _onViewStateChange = ({ viewState }) => {\n    const { width, height } = viewState;\n    const vp = new WebMercatorViewport(viewState);\n    const wn = vp.unproject([0, 0]);\n    const es = vp.unproject([width, height]);\n\n    if (wn[0] < BOUNDS[0][0]) {\n      const leftBoundPx = vp.project(BOUNDS[0]);\n      const centerX = vp.unproject([(width - 1) / 2 + leftBoundPx[0], height]);\n\n      viewState.longitude = centerX[0];\n    }\n    if (wn[1] > BOUNDS[1][1]) {\n      const topBoundPx = vp.project(BOUNDS[1]);\n      const centerY = vp.unproject([width, (height - 1) / 2 + topBoundPx[1]]);\n\n      viewState.latitude = centerY[1];\n    }\n    if (es[0] > BOUNDS[1][0]) {\n      const rightBoundPx = vp.project(BOUNDS[1]);\n      const diff = width - rightBoundPx[0];\n      const centerX = vp.unproject([(rightBoundPx[0] - 1 - diff) / 2, height]);\n\n      viewState.longitude = centerX[0];\n    }\n    if (es[1] < BOUNDS[0][1]) {\n      const bottomBoundPx = vp.project(BOUNDS[0]);\n      const diff = height - bottomBoundPx[1];\n      const centerY = vp.unproject([width, (bottomBoundPx[1] - 1 - diff) / 2]);\n\n      viewState.latitude = centerY[1];\n    }\n\n    setViewport(viewState);\n  };\n\n  const _onMouseHover = (event) => {\n    if (isMapLoaded) {\n      const map = mapRef.current.getMap();\n      const mapZoom = map.getZoom();\n      const hoveredLayer = mapZoom > ZOOM.COUNTIES ? \"counties\" : \"states\";\n      const { features, lngLat } = event;\n\n      const hoveredFeature = features.find(\n        (f) => f.layer.id === \"state-bound\" || f.layer.id === \"county-bound\"\n      );\n      if (hoveredFeature) {\n        const [longitude, latitude] = lngLat;\n        setPopupCoords({ longitude, latitude });\n\n        if (mapZoom < ZOOM.COUNTIES) {\n          setCountyChartData({});\n          getStateInfo(hoveredFeature);\n        } else {\n          setChartData({});\n          getCountyInfo(hoveredFeature);\n        }\n\n        if (hoveredStateSource.current) {\n          map.setFeatureState(\n            { source: hoveredStateSource.current, id: hoveredStateId.current },\n            { hover: false }\n          );\n        }\n\n        hoveredStateId.current = hoveredFeature.id;\n        hoveredStateSource.current = hoveredFeature.source;\n\n        map.setFeatureState(\n          { source: hoveredStateSource.current, id: hoveredStateId.current },\n          { hover: true }\n        );\n      } else {\n        setPopupCoords({});\n        map.setFeatureState(\n          {\n            source: hoveredStateSource.current || hoveredLayer,\n            id: hoveredStateId.current,\n          },\n          { hover: false }\n        );\n\n        hoveredStateId.current = null;\n        hoveredStateSource.current = null;\n      }\n    }\n  };\n\n  const getStateInfo = (feature) => {\n    const stateName = feature.properties.NAME;\n    const stateAbbr = usaStatesAbbr.find(\n      (stateAbbr) => stateAbbr.label === stateName\n    );\n\n    let {\n      positive,\n      hospitalizedCurrently,\n      hospitalizedCumulative,\n      death,\n      totalTestResults,\n    } = trackers.find((tracker) => tracker.state === stateAbbr.value);\n\n    if (!error) {\n      setChartData({\n        positive,\n        hospitalizedCurrently: hospitalizedCumulative || hospitalizedCurrently,\n        death,\n        totalTestResults,\n        stateName,\n      });\n    }\n  };\n\n  const getCountyInfo = (feature) => {\n    const { GEO_ID, STATE, NAME } = feature.properties;\n\n    const indStartPos = GEO_ID.includes(\"US0\")\n      ? GEO_ID.indexOf(\"US0\") + 3\n      : GEO_ID.indexOf(\"US\") + 2;\n    const countyFIPS = GEO_ID.substring(indStartPos, GEO_ID.length);\n\n    const stateName = usaStatesAbbr.find((state) => state.id === STATE).label;\n    const RSEIScore = rseiData[countyFIPS]?.[0][\"RSEI Score\"];\n\n    const countyData = {\n      headers: [\n        { key: \"State\", value: stateName },\n        { key: \"County\", value: NAME },\n      ],\n      data: [RSEIScore],\n    };\n\n    setCountyChartData(countyData);\n  };\n\n  useEffect(() => {\n    const getMaxTotalTests = () =>\n      trackers\n        .slice()\n        .sort((a, b) =>\n          d3.descending(a.totalTestResults, b.totalTestResults)\n        )[0];\n\n    const getMaxRsei = () =>\n      d3.max(usRSEIScoreCounties, (d) => d[\"RSEI Score\"]);\n\n    const getRseiData = () =>\n      d3\n        .nest()\n        .key((d) => d.FIPS)\n        .object(usRSEIScoreCounties);\n\n    if (\n      !isMapLoaded ||\n      isTrackersLoading ||\n      isStatesLoading ||\n      isCountiesLoading ||\n      isRSEIScoreLoading\n    ) {\n      setIsLoading(true);\n    } else {\n      setMaxTotalTests(getMaxTotalTests());\n      setRseiData(getRseiData());\n      setMaxRsei(getMaxRsei());\n      setIsLoading(false);\n    }\n  }, [\n    isMapLoaded,\n    isTrackersLoading,\n    trackers,\n    usRSEIScoreCounties,\n    isCountiesLoading,\n    isRSEIScoreLoading,\n    isStatesLoading,\n  ]);\n\n  useEffect(() => {\n    setIsCountiesLoading(true);\n    setIsStatesLoading(true);\n    setIsRSEIScoreLoading(true);\n\n    import(\"../data/gz_2010_us_050_00_500k.json\").then((counties) => {\n      setUsGeoJsonCounties(counties.default);\n      setIsCountiesLoading(false);\n    });\n    import(\"../data/gz_2010_us_040_00_500k.json\").then((states) => {\n      setUsGeoJsonStates(states.default);\n      setIsStatesLoading(false);\n    });\n    import(\"../data/counties-rsei-score.json\").then((rsei) => {\n      setUsRSEIScoreCounties(rsei.default);\n      setIsRSEIScoreLoading(false);\n    });\n  }, []);\n\n  return (\n    <div className=\"map-container\">\n      {isLoading && (\n        <div className=\"map-spinner\">\n          <Spiner />\n        </div>\n      )}\n      <ReactMapGL\n        {...viewport}\n        ref={mapRef}\n        width=\"100vw\"\n        height=\"100vh\"\n        mapboxApiAccessToken={TOKEN}\n        mapStyle=\"mapbox://styles/alexnorvag/ck9efq0oz2d0x1ioftrtazzyz\"\n        // mapStyle=\"mapbox://styles/alexnorvag/ck9efq0oz2d0x1ioftrtazzyz/draft\"\n\n        onViewStateChange={_onViewStateChange}\n        onLoad={_onLoad}\n        onHover={_onMouseHover}\n        minZoom={ZOOM.MIN}\n        maxZoom={ZOOM.MAX}\n      >\n        {Object.entries(popupCoords).length !== 0 && (\n          <Popup\n            latitude={popupCoords.latitude}\n            longitude={popupCoords.longitude}\n            closeButton={false}\n            // anchor={\"top\"}\n            anchor={\"bottom-right\"}\n          >\n            <div className=\"popup-container\">\n              <div className=\"popup-chart\">\n                {viewport.zoom < ZOOM.COUNTIES\n                  ? Object.entries(chartData).length !== 0 && (\n                      <ConcentricChart\n                        data={chartData}\n                        dataKeys={[\n                          { totalTestResults: \"Total\" },\n                          { positive: \"Positive\" },\n                          { hospitalizedCurrently: \"Hospitalized\" },\n                          { death: \"Death\" },\n                        ]}\n                        maxTotalTests={{\n                          totalTestResults: maxTotalTests.totalTestResults,\n                          hospitalizedCurrently:\n                            maxTotalTests.hospitalizedCumulative ||\n                            maxTotalTests.hospitalizedCurrently,\n                        }}\n                        width={legendOnRight.current ? 550 : 420}\n                        height={legendOnRight.current ? 280 : 360}\n                        top={10}\n                        bottom={10}\n                        left={10}\n                        right={10}\n                        legendWidth={legendOnRight.current ? 180 : 420}\n                        legendHeight={legendOnRight.current ? 150 : 80}\n                        legendTop={5}\n                        legendRight={10}\n                        legendBottom={5}\n                        legendLeft={10}\n                        useLegend={true}\n                        legendOnRight={legendOnRight.current}\n                      />\n                    )\n                  : Object.entries(countyChartData).length !== 0 && (\n                      <CountyPopup\n                        chartHeaders={countyChartData.headers}\n                        chartData={\n                          countyChartData.data[0]\n                            ? [maxRsei, ...countyChartData.data]\n                            : []\n                        }\n                      />\n                    )}\n              </div>\n            </div>\n          </Popup>\n        )}\n        {usGeoJsonCounties.length !== 0 && (\n          <Source\n            id=\"counties\"\n            type=\"geojson\"\n            data={usGeoJsonCounties}\n            ref={_sourceRef}\n            generateId={true}\n          >\n            <Layer {...countiesBoundLayer} beforeId={\"waterway-label\"} />\n            <Layer {...countiesBorderLayer} beforeId={\"waterway-label\"} />\n          </Source>\n        )}\n        {usGeoJsonStates.length !== 0 && (\n          <Source\n            id=\"states\"\n            type=\"geojson\"\n            data={usGeoJsonStates}\n            ref={_sourceRef}\n            generateId={true}\n          >\n            <Layer {...statesBoundLayer} beforeId={\"waterway-label\"} />\n            <Layer {...statesBorderLayer} beforeId={\"waterway-label\"} />\n          </Source>\n        )}\n\n        <div className=\"map-navigation\">\n          <NavigationControl showCompass={false} />\n        </div>\n      </ReactMapGL>\n    </div>\n  );\n};\n\nexport default Map;\n","import \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\n\nimport React from \"react\";\nimport Map from \"./components/Map\";\n\nimport \"./app.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"App-container\">\n        <div className=\"covid-map\">\n          <Map />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}